version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: euxton-methodist-church-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: CaptivePortal
      MYSQL_USER: ${MYSQL_USER:-captiveuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-captivepass}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-rootpassword}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: euxton-methodist-church-nextjs
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - SITE_MANAGER_API_KEY=${SITE_MANAGER_API_KEY}
      - SITE_MANAGER_URL=${SITE_MANAGER_URL}
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=CaptivePortal
      - MYSQL_USER=${MYSQL_USER:-captiveuser}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-captivepass}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: euxton-methodist-church-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"  # For future HTTPS support
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - nextjs
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  nginx-logs: 